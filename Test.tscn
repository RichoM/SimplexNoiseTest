[gd_scene load_steps=6 format=2]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 10, 10 )
subdivide_width = 100
subdivide_depth = 100

[sub_resource type="Shader" id=2]
code = "shader_type spatial;

uniform vec2 offset;
uniform vec4 water : hint_color;
uniform vec4 beach : hint_color;
uniform vec4 forest : hint_color;
uniform vec4 mountain : hint_color;
uniform vec4 snow : hint_color;
uniform sampler2D noise_sampler;

uniform float water_threshold = 0.0;
uniform float beach_threshold = 0.5;
uniform float forest_threshold = 0.53;
uniform float mountain_threshold = 0.6;
uniform float snow_threshold = 0.65;

void vertex() {
	UV += offset;
	vec4 noise = texture(noise_sampler, UV);
	
	if (noise.r > snow_threshold) {
		VERTEX.y += (noise.r - beach_threshold) * 3.0;
	} else if (noise.r > mountain_threshold) {
		VERTEX.y += (noise.r - beach_threshold) * 2.0;
	} else if (noise.r > forest_threshold) {
		VERTEX.y += (noise.r - beach_threshold) * 1.15;
	} else if (noise.r > beach_threshold) {
		VERTEX.y += (noise.r - beach_threshold) * 1.05;
	}
}

void fragment() {
	vec4 noise = texture(noise_sampler, UV);
	vec4 color = vec4(1.0);
	if (noise.x > snow_threshold) {
		color = snow;
	} else if (noise.x > mountain_threshold) {
		color = mountain;
	} else if (noise.x > forest_threshold) {
		color = forest;
	} else if (noise.x > beach_threshold) {
		color = beach;
	} else if (noise.x > water_threshold) {
		color = water;
	}
	ALBEDO = noise.rgb * color.rgb;
}
"

[sub_resource type="OpenSimplexNoise" id=6]
octaves = 4

[sub_resource type="NoiseTexture" id=7]
seamless = true
noise = SubResource( 6 )

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 2 )
shader_param/offset = Vector2( 0, 0 )
shader_param/water = Color( 0.0901961, 0.482353, 0.768627, 1 )
shader_param/beach = Color( 0.890196, 0.882353, 0.329412, 1 )
shader_param/forest = Color( 0.141176, 0.678431, 0.235294, 1 )
shader_param/mountain = Color( 0.243137, 0.235294, 0.223529, 1 )
shader_param/snow = Color( 0.996078, 0.996078, 0.996078, 1 )
shader_param/water_threshold = 0.0
shader_param/beach_threshold = 0.466
shader_param/forest_threshold = 0.498
shader_param/mountain_threshold = 0.55
shader_param/snow_threshold = 0.645
shader_param/noise_sampler = SubResource( 7 )

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.000306278, 0.00380003, -0.00312352 )
mesh = SubResource( 1 )
material/0 = SubResource( 5 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.791981, 0.610546, 0, -0.610546, 0.791981, -0.00122511, 1.21673, -0.0124943 )
