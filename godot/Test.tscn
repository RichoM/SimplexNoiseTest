[gd_scene load_steps=16 format=2]

[ext_resource path="res://terrain_plane.tres" type="Material" id=1]
[ext_resource path="res://terrain_sphere.tres" type="Material" id=2]
[ext_resource path="res://littleplanet.gd" type="Script" id=3]
[ext_resource path="res://clouds.tres" type="Material" id=4]
[ext_resource path="res://GUI.tscn" type="PackedScene" id=5]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 10, 10 )
subdivide_width = 100
subdivide_depth = 100

[sub_resource type="SphereMesh" id=2]
radius = 3.0
height = 6.0
radial_segments = 128
rings = 64

[sub_resource type="SphereMesh" id=3]
radius = 3.0
height = 6.0

[sub_resource type="SphereMesh" id=4]

[sub_resource type="Shader" id=5]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_normal : hint_normal;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	NORMALMAP = texture(texture_normal,base_uv).rgb;
	NORMALMAP_DEPTH = normal_scale;
}
"

[sub_resource type="OpenSimplexNoise" id=6]
period = 50.0
persistence = 1.0
lacunarity = 2.71

[sub_resource type="NoiseTexture" id=7]
as_normalmap = true
noise = SubResource( 6 )

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 5 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/normal_scale = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_normal = SubResource( 7 )

[sub_resource type="ProceduralSky" id=9]
ground_bottom_color = Color( 0, 0.00784314, 0.109804, 1 )
ground_horizon_color = Color( 0, 0, 0, 1 )

[sub_resource type="Environment" id=10]
background_mode = 2
background_sky = SubResource( 9 )

[node name="Spatial" type="Spatial"]

[node name="flatearth" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.000306278, 0.00380003, -0.00312352 )
visible = false
mesh = SubResource( 1 )
material/0 = ExtResource( 1 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.791981, 0.610546, 0, -0.610546, 0.791981, -0.00122511, 1.21673, -0.0124943 )

[node name="littleplanet" type="MeshInstance" parent="."]
transform = Transform( -0.801711, 0.309686, 0.511227, -0.320537, -0.944676, 0.0695867, 0.504494, -0.108079, 0.856624, 0, 10, 0 )
mesh = SubResource( 2 )
material/0 = ExtResource( 2 )
script = ExtResource( 3 )

[node name="clouds" type="MeshInstance" parent="littleplanet"]
transform = Transform( -0.863287, -0.014908, 0.504494, -0.0460108, -0.993078, -0.108079, 0.502613, -0.116515, 0.856624, 0, 0, 0 )
mesh = SubResource( 3 )
material/0 = ExtResource( 4 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -8.87739, 10.0006, 0 )
visible = false
mesh = SubResource( 4 )
material/0 = SubResource( 8 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.809017, 0.587785, 0, -0.587785, 0.809017, -1.451, 13.65, 5 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 10 )

[node name="GUI" parent="." instance=ExtResource( 5 )]
planet = NodePath("../littleplanet")
